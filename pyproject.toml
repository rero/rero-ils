[tool.poetry]
name = "rero-ils"
version = "1.22.1"
description = "Invenio digital library framework."
authors = ["RERO <software@rero.ch>"]
license = "GNU Affero General Public License v3.0"

[tool.poetry.dependencies]
python = ">= 3.9, <3.10"
## Python packages dependencies (order matters)
#------------------------------------------------------------------------------
## Note: poetry evaluates the package constraints from the top to the bottom
## and respects only the last constraint to install the package.
## Thus the most strength constraint should be at the end.
## Imagine the following package list for the foo package with the
## most recent version equal to 5.0:
## A foo Pipfile example:
## ----------------------
## foo = ">1.0" # first will install 5.0
## foo = "==1.0" # then will downgrade to 1.0
## foo = ">3.0" # finally will upgrade to 5.0
## when the python code will be executed a conflict exception will be raised.
#------------------------------------------------------------------------------
# Default from Invenio
lxml = ">=4.9.1"
marshmallow = ">=3.0.0,<4.0.0"
uwsgi = ">=2.0"
uwsgi-tools = ">=1.1.1"
uwsgitop = ">=0.11"

## Third party invenio modules used by RERO ILS
invenio-oaiharvester = { git = "https://github.com/inveniosoftware/invenio-oaiharvester.git", tag = "v1.0.0a4" }
invenio-circulation = {version = "^3.0.0a1", allow-prereleases = true}

invenio-search = {version = ">=2.1.0,<3.0.0", extras = ["elasticsearch7"]}
# Invenio core modules
invenio-app = ">=1.4.0,<2.0.0"
invenio-base = ">=1.3.0,<2.0.0"
invenio-cache = ">=1.1.1,<2.0.0"
invenio-celery = ">=1.2.5,<2.0.0"
invenio-config = ">=1.0.3,<2.0.0"
invenio-i18n = ">=2.0.0,<3.0.0"
invenio-db = {version = ">=1.1.0,<2.0.0", extras = ["postgresql"]}
# Invenio base bundle
invenio-admin = ">=1.4.0,<1.5.0"
invenio-assets = ">=3.0.0,<4.0.0"
invenio-formatter = ">=2.0.0,<3.0.0"
invenio-logging = ">=2.0.0,<3.0.0"
invenio-mail = ">=2.0.0,<3.0.0"
invenio-rest = ">=1.3.0,<2.0.0"
invenio-theme = ">3.0.0,<4.0.0"
# Invenio auth bundle
invenio-access = ">=2.0.0,<3.0.0"
invenio-accounts = "<5.1.0"
invenio-oauth2server = ">=2.3.0,<3.0.0"
invenio-oauthclient = ">=4.0.0,<5.0.0"
# Invenio metadata bundle
invenio-indexer = ">=2.2.0,<3.0.0"
invenio-jsonschemas = ">=1.1.4,<2.0.0"
invenio-oaiserver = ">=2.2.0,<3.0.0"
invenio-pidstore = ">=1.3.0,<2.0.0"
invenio-records-rest = ">=2.2.0,<3.0.0"
invenio-records-ui = ">=1.2.0,<2.0.0"
invenio-records = ">=2.1.0,<3.0.0"
invenio-search-ui = ">=2.4.0,<3.0.0"

invenio-records-permissions = ">=0.13.0"
python-dotenv = ">=0.13.0"

# Pinned due to before_first_request deprecation https://flask.palletsprojects.com/en/2.2.x/api/#flask.Flask.before_first_request
Flask = ">=2.2.0,<2.3.0"
sentry-sdk = "<2.0.0"
dojson = ">=1.4.0"
# TODO: dojson problem = AttributeError: 'Group' object has no attribute 'resultcallback'
click = "<8.1.0"
# pinned due to breaking change in v71
setuptools = "<71.0.0"

## RERO ILS specific python modules
PyYAML = ">=5.3.1"
dateparser = ">=1.1.1"
isbnlib = ">=3.9.1"
requests = ">=2.23.0"
polib = "*"
xmltodict = "*"
redisbeat = ">1.2.5, <1.3.0"
jsonpickle = ">=1.4.1"
ciso8601 = "*"

## Additionnal constraints on python modules
markdown-captions = "*"
zipp = "*"

## Third party optional modules used by RERO ILS
invenio-sip2 = ">=0.6.23"
freezegun = ">=1.1.0"
lazyreader = ">1.0.0"
jinja2 = ">2.11.2"
jsonmerge = ">=1.8.0"
num2words = ">=0.5.10"
iso639 = ">=0.1.4"
dcxml = ">=0.1.2"
DeepDiff = ">=5.5.0"
docutils = "<0.18.0"
wtforms = "<3.0.0"
poethepoet = ">=0.12.3"
# to avoid conflict for urllib3
dparse = ">=0.5.2"
Mako = ">=1.2.2"
rero-invenio-base = ">=0.3.0"
jsonresolver = "*"
# needed for elasticsearch 7.13.4
urllib3 = "<2.0.0"
pyparsing = ">=3.1.1"
flask-wiki = ">=0.3.1"
dnspython = ">2.4.2"
cryptography = ">41.0.7"
babel = ">2.14.0"
rero-invenio-files = ">=1.0.0,<2.0.0"

[tool.poetry.dev-dependencies]
## Python packages development dependencies (order matters)
#----------------------------------------------------------
## Default from Invenio
pytest-black-ng = ">=0.4.0"
pytest-invenio = ">=2.1.6,<3.0.0"
pydocstyle = ">=6.1.1"
Sphinx = ">=4.5.0"
Flask-Debugtoolbar = ">=0.10.1"
## RERO ILS specific python packages
safety = ">=1.8,<3.0.0"
mock = ">=2.0.0"
autoflake = ">=1.3.1"
appnope = { version = "*", optional = true }

[tool.poetry.extras]
## Python extra packages dependencies
#------------------------------------
sip2 = ["invenio-sip2"]

[tool.poetry.plugins."console_scripts"]
rero-ils = "invenio_app.cli:cli"

[tool.poetry.plugins."babel.extractors"]
json = "rero_ils.modules.babel_extractors:extract_json"

[tool.poetry.plugins."dojson.cli"]
head = "rero_ils.dojson.cli:head"
reverse = "rero_ils.dojson.cli:reverse"

[tool.poetry.plugins."dojson.cli.dump"]
pjson = "rero_ils.dojson.cli:pretty_json_dump"

[tool.poetry.plugins."dojson.cli.rule"]
marc21_ebooks_to_json = "rero_ils.modules.ebooks.dojson.contrib.marc21:marc21"
marc21_dnb_to_json = "rero_ils.modules.documents.dojson.contrib.marc21tojson:marc21_dnb"
marc21_kul_to_json = "rero_ils.modules.documents.dojson.contrib.marc21tojson:marc21_kul"
marc21_loc_to_json = "rero_ils.modules.documents.dojson.contrib.marc21tojson:marc21_loc"
marc21_rero_to_json = "rero_ils.modules.documents.dojson.contrib.marc21tojson:marc21_rero"
marc21_slsp_to_json = "rero_ils.modules.documents.dojson.contrib.marc21tojson:marc21_slsp"
marc21_ugent_to_json = "rero_ils.modules.documents.dojson.contrib.marc21tojson:marc21_ugent"
unimarc_to_json = "rero_ils.modules.documents.dojson.contrib.unimarctojson:unimarc"

[tool.poetry.plugins."flask.commands"]
reroils = "rero_ils.modules.cli.reroils:reroils"

[tool.poetry.plugins."invenio_admin.views"]
selfcheck_users_accounts = "rero_ils.modules.selfcheck.admin:selfcheck_terminal_adminview"

[tool.poetry.plugins."invenio_assets.webpack"]
reroils_theme = "rero_ils.theme.webpack:theme"

[tool.poetry.plugins."invenio_base.api_apps"]
invenio_i18n = "invenio_i18n:InvenioI18N"
rero-ils = "rero_ils.modules.ext:REROILSAPP"

[tool.poetry.plugins."invenio_base.api_blueprints"]
acq_accounts = "rero_ils.modules.acquisition.acq_accounts.views:api_blueprint"
acq_orders = "rero_ils.modules.acquisition.acq_orders.views:api_blueprint"
acq_receipts = "rero_ils.modules.acquisition.acq_receipts.views:api_blueprint"
documents = "rero_ils.modules.documents.api_views:api_blueprint"
circ_policies = "rero_ils.modules.circ_policies.views:blueprint"
local_entities = "rero_ils.modules.entities.local_entities.views:api_blueprint"
remote_entities = "rero_ils.modules.entities.remote_entities.views:api_blueprint"
holdings = "rero_ils.modules.holdings.api_views:api_blueprint"
imports = "rero_ils.modules.imports.views:api_blueprint"
item_types = "rero_ils.modules.item_types.views:blueprint"
items = "rero_ils.modules.items.views:api_blueprint"
libraries = "rero_ils.modules.libraries.api_views:api_blueprint"
loans = "rero_ils.modules.loans.api_views:api_blueprint"
monitoring = "rero_ils.modules.monitoring.views:api_blueprint"
notifications = "rero_ils.modules.notifications.views:blueprint"
patron_types = "rero_ils.modules.patron_types.views:blueprint"
patrons = "rero_ils.modules.patrons.views:api_blueprint"
permissions ="rero_ils.modules.views:api_blueprint"
users = "rero_ils.modules.users.api_views:api_blueprint"
stats_cfg = "rero_ils.modules.stats_cfg.views:api_blueprint"

[tool.poetry.plugins."invenio_base.apps"]
rero-ils = "rero_ils.modules.ext:REROILSAPP"

[tool.poetry.plugins."invenio_base.blueprints"]
circ_policies = "rero_ils.modules.circ_policies.views:blueprint"
collections = "rero_ils.modules.collections.views:blueprint"
entities = "rero_ils.modules.entities.views:blueprint"
documents = "rero_ils.modules.documents.views:blueprint"
holdings = "rero_ils.modules.holdings.views:blueprint"
ill_requests = "rero_ils.modules.ill_requests.views:blueprint"
item_types = "rero_ils.modules.item_types.views:blueprint"
notifications = "rero_ils.modules.notifications.views:blueprint"
patron_types = "rero_ils.modules.patron_types.views:blueprint"
patrons = "rero_ils.modules.patrons.views:blueprint"
stats = "rero_ils.modules.stats.views:blueprint"
templates = "rero_ils.modules.templates.views:blueprint"
theme = "rero_ils.theme.views:blueprint"
users = "rero_ils.modules.users.views:blueprint"

[tool.poetry.plugins."invenio_base.api_converters"]
nooppid = "rero_ils.converters:NoopPIDConverter"

[tool.poetry.plugins."invenio_celery.tasks"]
apiharvester = "rero_ils.modules.apiharvester.tasks"
collections = "rero_ils.modules.collections.tasks"
documents = "rero_ils.modules.documents.tasks"
remote_entities = "rero_ils.modules.entities.remote_entities.tasks"
ebooks = "rero_ils.modules.ebooks.tasks"
holdings = "rero_ils.modules.holdings.tasks"
items = "rero_ils.modules.items.tasks"
loans = "rero_ils.modules.loans.tasks"
libraries = "rero_ils.modules.libraries.tasks"
locations = "rero_ils.modules.locations.tasks"
indexer_locent = "rero_ils.modules.entities.local_entities.indexer"
modules = "rero_ils.modules.tasks"
notifications = "rero_ils.modules.notifications.tasks"
patrons = "rero_ils.modules.patrons.tasks"
stats = "rero_ils.modules.stats.tasks"

[tool.poetry.plugins."invenio_config.module"]
rero_ils = "rero_ils.config"

[tool.poetry.plugins."invenio_db.alembic"]
rero_ils = "rero_ils:alembic"

[tool.poetry.plugins."invenio_db.models"]
acq_accounts = "rero_ils.modules.acquisition.acq_accounts.models"
acq_invoices = "rero_ils.modules.acquisition.acq_invoices.models"
acq_order_lines = "rero_ils.modules.acquisition.acq_order_lines.models"
acq_orders = "rero_ils.modules.acquisition.acq_orders.models"
acq_receipt_lines = "rero_ils.modules.acquisition.acq_receipt_lines.models"
acq_receipts = "rero_ils.modules.acquisition.acq_receipts.models"
apiharvester = "rero_ils.modules.apiharvester.models"
budgets = "rero_ils.modules.acquisition.budgets.models"
circ_policies = "rero_ils.modules.circ_policies.models"
collections = "rero_ils.modules.collections.models"
documents = "rero_ils.modules.documents.models"
holdings = "rero_ils.modules.holdings.models"
ill_requests = "rero_ils.modules.ill_requests.models"
item_types = "rero_ils.modules.item_types.models"
items = "rero_ils.modules.items.models"
libraries = "rero_ils.modules.libraries.models"
local_fields = "rero_ils.modules.local_fields.models"
locations = "rero_ils.modules.locations.models"
remote_entities = "rero_ils.modules.entities.remote_entities.models"
local_entities = "rero_ils.modules.entities.local_entities.models"
notifications = "rero_ils.modules.notifications.models"
organisations = "rero_ils.modules.organisations.models"
patron_transaction_events = "rero_ils.modules.patron_transaction_events.models"
patron_transactions = "rero_ils.modules.patron_transactions.models"
patron_types = "rero_ils.modules.patron_types.models"
patrons = "rero_ils.modules.patrons.models"
selfcheck = "rero_ils.modules.selfcheck.models"
stats = "rero_ils.modules.stats.models"
stats_cfg = "rero_ils.modules.stats_cfg.models"
templates = "rero_ils.modules.templates.models"
vendors = "rero_ils.modules.vendors.models"

[tool.poetry.plugins."invenio_i18n.translations"]
messages = "rero_ils"
messages_wiki = "flask_wiki"

[tool.poetry.plugins."invenio_jsonschemas.schemas"]
acq_accounts = "rero_ils.modules.acquisition.acq_accounts.jsonschemas"
acq_invoices = "rero_ils.modules.acquisition.acq_invoices.jsonschemas"
acq_order_lines = "rero_ils.modules.acquisition.acq_order_lines.jsonschemas"
acq_orders = "rero_ils.modules.acquisition.acq_orders.jsonschemas"
acq_receipt_lines = "rero_ils.modules.acquisition.acq_receipt_lines.jsonschemas"
acq_receipts = "rero_ils.modules.acquisition.acq_receipts.jsonschemas"
budgets = "rero_ils.modules.acquisition.budgets.jsonschemas"
circ_policies = "rero_ils.modules.circ_policies.jsonschemas"
collections = "rero_ils.modules.collections.jsonschemas"
common = "rero_ils.jsonschemas"
remote_entities = "rero_ils.modules.entities.remote_entities.jsonschemas"
documents = "rero_ils.modules.documents.jsonschemas"
holdings = "rero_ils.modules.holdings.jsonschemas"
ill_requests = "rero_ils.modules.ill_requests.jsonschemas"
item_types = "rero_ils.modules.item_types.jsonschemas"
items = "rero_ils.modules.items.jsonschemas"
libraries = "rero_ils.modules.libraries.jsonschemas"
loans = "rero_ils.modules.loans.jsonschemas"
local_entities = "rero_ils.modules.entities.local_entities.jsonschemas"
local_fields = "rero_ils.modules.local_fields.jsonschemas"
locations = "rero_ils.modules.locations.jsonschemas"
notifications = "rero_ils.modules.notifications.jsonschemas"
operation_logs = "rero_ils.modules.operation_logs.jsonschemas"
organisations = "rero_ils.modules.organisations.jsonschemas"
patron_transaction_events = "rero_ils.modules.patron_transaction_events.jsonschemas"
patron_transactions = "rero_ils.modules.patron_transactions.jsonschemas"
patron_types = "rero_ils.modules.patron_types.jsonschemas"
patrons = "rero_ils.modules.patrons.jsonschemas"
stats = "rero_ils.modules.stats.jsonschemas"
stats_cfg = "rero_ils.modules.stats_cfg.jsonschemas"
templates = "rero_ils.modules.templates.jsonschemas"
users = "rero_ils.modules.users.jsonschemas"
vendors = "rero_ils.modules.vendors.jsonschemas"
files = "rero_ils.modules.files.jsonschemas"

[tool.poetry.plugins."invenio_oauth2server.scopes"]
birthdate = "rero_ils.oauth.scopes:birthdate"
expiration_date = "rero_ils.oauth.scopes:expiration_date"
fullname = "rero_ils.oauth.scopes:fullname"
institution = "rero_ils.oauth.scopes:institution"
patron_type = "rero_ils.oauth.scopes:patron_type"
patron_types = "rero_ils.oauth.scopes:patron_types"

[tool.poetry.plugins."invenio_pidstore.fetchers"]
acq_account_id = "rero_ils.modules.acquisition.acq_accounts.api:acq_account_id_fetcher"
acq_invoice_id = "rero_ils.modules.acquisition.acq_invoices.api:acq_invoice_id_fetcher"
acq_order_id = "rero_ils.modules.acquisition.acq_orders.api:acq_order_id_fetcher"
acq_order_line_id = "rero_ils.modules.acquisition.acq_order_lines.api:acq_order_line_id_fetcher"
acq_receipt_id = "rero_ils.modules.acquisition.acq_receipts.api:acq_receipt_id_fetcher"
acq_receipt_line_id = "rero_ils.modules.acquisition.acq_receipt_lines.api:acq_receipt_line_id_fetcher"
budget_id = "rero_ils.modules.acquisition.budgets.api:budget_id_fetcher"
circ_policy_id = "rero_ils.modules.circ_policies.api:circ_policy_id_fetcher"
collection_id = "rero_ils.modules.collections.api:collection_id_fetcher"
document_id = "rero_ils.modules.documents.api:document_id_fetcher"
remote_entity_id = "rero_ils.modules.entities.remote_entities.api:remote_entity_id_fetcher"
holding_id = "rero_ils.modules.holdings.api:holding_id_fetcher"
ill_request_id = "rero_ils.modules.ill_requests.api:ill_request_id_fetcher"
item_id = "rero_ils.modules.items.api:item_id_fetcher"
item_type_id = "rero_ils.modules.item_types.api:item_type_id_fetcher"
library_id = "rero_ils.modules.libraries.api:library_id_fetcher"
local_entity_id = "rero_ils.modules.entities.local_entities.api:local_entity_id_fetcher"
local_field_id = "rero_ils.modules.local_fields.api:local_field_id_fetcher"
location_id = "rero_ils.modules.locations.api:location_id_fetcher"
notification_id = "rero_ils.modules.notifications.api:notification_id_fetcher"
operation_log_id = "rero_ils.modules.operation_logs.api:operation_log_id_fetcher"
organisation_id = "rero_ils.modules.organisations.api:organisation_id_fetcher"
patron_id = "rero_ils.modules.patrons.api:patron_id_fetcher"
patron_transaction_event_id = "rero_ils.modules.patron_transaction_events.api:patron_transaction_event_id_fetcher"
patron_transaction_id = "rero_ils.modules.patron_transactions.api:patron_transaction_id_fetcher"
patron_type_id = "rero_ils.modules.patron_types.api:patron_type_id_fetcher"
stat_id = "rero_ils.modules.stats.api.api:stat_id_fetcher"
stat_cfg_id = "rero_ils.modules.stats_cfg.api:stat_cfg_id_fetcher"
template_id = "rero_ils.modules.templates.api:template_id_fetcher"
entity_id = "rero_ils.modules.entities.fetchers:id_fetcher"
vendor_id = "rero_ils.modules.vendors.api:vendor_id_fetcher"

[tool.poetry.plugins."invenio_pidstore.minters"]
acq_account_id = "rero_ils.modules.acquisition.acq_accounts.api:acq_account_id_minter"
acq_invoice_id = "rero_ils.modules.acquisition.acq_invoices.api:acq_invoice_id_minter"
acq_order_id = "rero_ils.modules.acquisition.acq_orders.api:acq_order_id_minter"
acq_order_line_id = "rero_ils.modules.acquisition.acq_order_lines.api:acq_order_line_id_minter"
acq_receipt_id = "rero_ils.modules.acquisition.acq_receipts.api:acq_receipt_id_minter"
acq_receipt_line_id = "rero_ils.modules.acquisition.acq_receipt_lines.api:acq_receipt_line_id_minter"
budget_id = "rero_ils.modules.acquisition.budgets.api:budget_id_minter"
circ_policy_id = "rero_ils.modules.circ_policies.api:circ_policy_id_minter"
collection_id = "rero_ils.modules.collections.api:collection_id_minter"
document_id = "rero_ils.modules.documents.api:document_id_minter"
remote_entity_id = "rero_ils.modules.entities.remote_entities.api:remote_entity_id_minter"
holding_id = "rero_ils.modules.holdings.api:holding_id_minter"
ill_request_id = "rero_ils.modules.ill_requests.api:ill_request_id_minter"
item_id = "rero_ils.modules.items.api:item_id_minter"
item_type_id = "rero_ils.modules.item_types.api:item_type_id_minter"
library_id = "rero_ils.modules.libraries.api:library_id_minter"
local_entity_id = "rero_ils.modules.entities.local_entities.api:local_entity_id_minter"
local_field_id = "rero_ils.modules.local_fields.api:local_field_id_minter"
location_id = "rero_ils.modules.locations.api:location_id_minter"
notification_id = "rero_ils.modules.notifications.api:notification_id_minter"
organisation_id = "rero_ils.modules.organisations.api:organisation_id_minter"
patron_id = "rero_ils.modules.patrons.api:patron_id_minter"
patron_transaction_event_id = "rero_ils.modules.patron_transaction_events.api:patron_transaction_event_id_minter"
patron_transaction_id = "rero_ils.modules.patron_transactions.api:patron_transaction_id_minter"
patron_type_id = "rero_ils.modules.patron_types.api:patron_type_id_minter"
stat_id = "rero_ils.modules.stats.api.api:stat_id_minter"
stat_cfg_id = "rero_ils.modules.stats_cfg.api:stat_cfg_id_minter"
template_id = "rero_ils.modules.templates.api:template_id_minter"
entity_id = "rero_ils.modules.entities.minters:id_minter"
vendor_id = "rero_ils.modules.vendors.api:vendor_id_minter"

[tool.poetry.plugins."invenio_records.jsonresolver"]
acq_accounts = "rero_ils.modules.acquisition.acq_accounts.jsonresolver"
acq_invoices = "rero_ils.modules.acquisition.acq_invoices.jsonresolver"
acq_order_lines = "rero_ils.modules.acquisition.acq_order_lines.jsonresolver"
acq_orders = "rero_ils.modules.acquisition.acq_orders.jsonresolver"
acq_receipt_lines = "rero_ils.modules.acquisition.acq_receipt_lines.jsonresolver"
acq_receipts = "rero_ils.modules.acquisition.acq_receipts.jsonresolver"
budgets = "rero_ils.modules.acquisition.budgets.jsonresolver"
collections = "rero_ils.modules.collections.jsonresolver"
documents = "rero_ils.modules.documents.jsonresolver"
holdings = "rero_ils.modules.holdings.jsonresolver"
ill_requests = "rero_ils.modules.ill_requests.jsonresolver"
item_types = "rero_ils.modules.item_types.jsonresolver"
items = "rero_ils.modules.items.jsonresolver"
libraries = "rero_ils.modules.libraries.jsonresolver"
loans = "rero_ils.modules.loans.jsonresolver"
local_fields = "rero_ils.modules.local_fields.jsonresolver"
local_entities = "rero_ils.modules.entities.local_entities.jsonresolver"
locations = "rero_ils.modules.locations.jsonresolver"
notifications = "rero_ils.modules.notifications.jsonresolver"
organisations = "rero_ils.modules.organisations.jsonresolver"
patron_transaction_events = "rero_ils.modules.patron_transaction_events.jsonresolver"
patron_transactions = "rero_ils.modules.patron_transactions.jsonresolver"
patron_types = "rero_ils.modules.patron_types.jsonresolver"
patrons = "rero_ils.modules.patrons.jsonresolver"
stats_cfg = "rero_ils.modules.stats_cfg.jsonresolver"
templates = "rero_ils.modules.templates.jsonresolver"
vendors = "rero_ils.modules.vendors.jsonresolver"

[tool.poetry.plugins."invenio_search.mappings"]
acq_accounts = "rero_ils.modules.acquisition.acq_accounts.mappings"
acq_invoices = "rero_ils.modules.acquisition.acq_invoices.mappings"
acq_order_lines = "rero_ils.modules.acquisition.acq_order_lines.mappings"
acq_orders = "rero_ils.modules.acquisition.acq_orders.mappings"
acq_receipt_lines = "rero_ils.modules.acquisition.acq_receipt_lines.mappings"
acq_receipts = "rero_ils.modules.acquisition.acq_receipts.mappings"
budgets = "rero_ils.modules.acquisition.budgets.mappings"
circ_policies = "rero_ils.modules.circ_policies.mappings"
collections = "rero_ils.modules.collections.mappings"
remote_entities = "rero_ils.modules.entities.remote_entities.mappings"
documents = "rero_ils.modules.documents.mappings"
holdings = "rero_ils.modules.holdings.mappings"
ill_requests = "rero_ils.modules.ill_requests.mappings"
item_types = "rero_ils.modules.item_types.mappings"
items = "rero_ils.modules.items.mappings"
libraries = "rero_ils.modules.libraries.mappings"
loans = "rero_ils.modules.loans.mappings"
local_entities = "rero_ils.modules.entities.local_entities.mappings"
local_fields = "rero_ils.modules.local_fields.mappings"
locations = "rero_ils.modules.locations.mappings"
notifications = "rero_ils.modules.notifications.mappings"
organisations = "rero_ils.modules.organisations.mappings"
patron_transaction_events = "rero_ils.modules.patron_transaction_events.mappings"
patron_transactions = "rero_ils.modules.patron_transactions.mappings"
patron_types = "rero_ils.modules.patron_types.mappings"
patrons = "rero_ils.modules.patrons.mappings"
stats = "rero_ils.modules.stats.mappings"
stats_cfg = "rero_ils.modules.stats_cfg.mappings"
templates = "rero_ils.modules.templates.mappings"
vendors = "rero_ils.modules.vendors.mappings"
files = "rero_ils.modules.files.mappings"

[tool.poetry.plugins."invenio_search.templates"]
operation_logs = "rero_ils.modules.operation_logs.es_templates:list_es_templates"
rero_ils = "rero_ils.es_templates:list_es_templates"


[tool.poetry.group.dev.dependencies]
beautifulsoup4 = "^4.11.1"

[tool.poe.tasks]
bootstrap = {cmd = "./scripts/bootstrap", help = "Runs bootstrap"}
console = {cmd = "./scripts/console", help = "Opens invenio shell"}
cypress = {cmd = "./scripts/cypress", help = "Runs Cypress tests"}
run_tests = {cmd = "./scripts/test", help = "Runs all tests"}
tests = {cmd = "pytest", help = "pytest"}
tests_debug = {cmd = "pytest -s -vv --no-cov", help = "pytest -s -vv --no-cov"}
server = {cmd = "./scripts/server", help = "Starts the server "}
setup = {cmd = "./scripts/setup", help = "Runs setup"}
update = {cmd = "./scripts/update", help = "Runs update"}

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
