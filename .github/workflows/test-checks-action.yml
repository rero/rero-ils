# This is a basic workflow that is manually triggered

name: test

on: [push, workflow_dispatch]

jobs:
  test_something:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        exitcode: [0, 33]
    steps:
    - uses: actions/checkout@v1

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Install Poetry
      uses: dschep/install-poetry-action@v1.2
      with:
        version: 1.0.10

    - name: Use Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
          ~/.cache/pypoetry/virtualenvs
          ~/.npm
        key: ${{ runner.os }}-pip-venv-${{ hashFiles('**/poetry.lock') }}

    - name: Run Test ${{ matrix.exitcode }}
      id: test
      continue-on-error: true
      run: |
        exit ${{ matrix.exitcode }}

    - uses: LouisBrunner/checks-action@v1.1.0
      id: status
      if: ${{ steps.test.outcome == 'failure' }}
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Test XYZ
        conclusion: neutral
        output: |
          { "summary": "FAILED!!!" }

    - name: Dump steps context
      if: always()
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
