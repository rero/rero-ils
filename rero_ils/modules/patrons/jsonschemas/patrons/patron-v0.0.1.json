{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "user",
  "description": "JSON schema for a user.",
  "additionalProperties": false,
  "propertiesOrder": [
    "user_id",
    "second_address",
    "roles",
    "patron",
    "libraries",
    "notes",
    "source",
    "local_code"
  ],
  "required": [
    "$schema",
    "pid",
    "user_id",
    "roles"
  ],
  "properties": {
    "$schema": {
      "title": "Schema",
      "description": "Schema to validate user records against.",
      "type": "string",
      "minLength": 9,
      "default": "https://ils.rero.ch/schemas/patrons/patron-v0.0.1.json"
    },
    "pid": {
      "title": "Patron ID",
      "type": "string"
    },
    "source": {
      "title": "Source",
      "description": "Source if the record has been loaded in a batch.",
      "type": "string",
      "minLength": 2
    },
    "local_code": {
      "title": "Local code",
      "description": "Code used to classify users, for instance for statistics.",
      "type": "string",
      "minLength": 2
    },
    "user_id": {
      "title": "Personal informations",
      "description": "",
      "type": "number",
      "form": {
        "templateOptions": {
          "wrappers": [
            "form-field",
            "user-id"
          ]
        }
      }
    },
    "second_address": {
      "title": "Secound address",
      "type": "object",
      "additionalProperties": false,
      "propertiesOrder": [
        "street",
        "postal_code",
        "city",
        "country"
      ],
      "properties": {
        "street": {
          "title": "Street",
          "description": "Street and number of the address.",
          "type": "string",
          "minLength": 1,
          "form": {
            "templateOptions": {
              "itemCssClass": "col-lg-12"
            }
          }
        },
        "postal_code": {
          "title": "Postal code",
          "type": "string",
          "minLength": 1,
          "form": {
            "templateOptions": {
              "itemCssClass": "col-lg-6"
            }
          }
        },
        "city": {
          "title": "City",
          "type": "string",
          "minLength": 1,
          "form": {
            "templateOptions": {
              "itemCssClass": "col-lg-6"
            }
          }
        },
        "country": {
          "allOf": [
            {
              "$ref": "https://ils.rero.ch/schemas/common/countries-v0.0.1.json#/country"
            },
            {
              "form": {
                "hideExpression": "!(field.parent.model && field.parent.model.city)"
              }
            }
          ]
        }
      },
      "form": {
        "templateOptions": {
          "wrappers": [
            "card"
          ],
          "containerCssClass": "row"
        }
      }
    },
    "patron": {
      "title": "Patron Information",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "barcode",
        "type",
        "communication_channel",
        "communication_language",
        "expiration_date"
      ],
      "propertiesOrder": [
        "barcode",
        "type",
        "communication_channel",
        "additional_communication_email",
        "communication_language",
        "expiration_date",
        "libraries",
        "blocked",
        "blocked_note"
      ],
      "properties": {
        "type": {
          "title": "Patron Type",
          "description": "Patron type in terms of circulation policy.",
          "type": "object",
          "required": [
            "$ref"
          ],
          "properties": {
            "$ref": {
              "type": "string",
              "pattern": "^https://ils.rero.ch/api/patron_types/.*?$",
              "form": {
                "remoteOptions": {
                  "type": "patron_types"
                }
              }
            }
          }
        },
        "barcode": {
          "title": "Patron's barcodes or cards number",
          "type": "array",
          "minItems": 1,
          "maxItems": 2,
          "uniqueItems": true,
          "items": {
            "title": "Patron's barcode or card number",
            "type": "string",
            "minLength": 6,
            "form": {
              "validation": {
                "validators": {
                  "valueAlreadyExists": {
                    "term": "barcode"
                  }
                },
                "messages": {
                  "alreadyTakenMessage": "The barcode is already taken."
                }
              }
            }
          }
        },
        "libraries": {
          "title": "Affiliation libraries",
          "description": "Library affiliation of the patron.",
          "type": "array",
          "uniqueItems": true,
          "minItems": 0,
          "items": {
            "title": "Affiliation library",
            "type": "object",
            "additionalProperties": false,
            "required": [
              "$ref"
            ],
            "properties": {
              "$ref": {
                "type": "string",
                "pattern": "^https://ils.rero.ch/api/libraries/.*?$",
                "form": {
                  "fieldMap": "libraries"
                }
              }
            }
          }
        },
        "expiration_date": {
          "title": "Patron's expiration date",
          "type": "string",
          "format": "date",
          "pattern": "\\d{4}-((0[1-9])|(1[0-2]))-(((0[1-9])|[1-2][0-9])|(3[0-1]))$",
          "form": {
            "type": "datepicker",
            "placeholder": "Select a date",
            "validation": {
              "messages": {
                "patternMessage": "Should be in the following format: 2022-12-31 (YYYY-MM-DD)."
              }
            }
          }
        },
        "communication_channel": {
          "title": "Communication channel",
          "description": "For the email channel, the user must have an e-mail or an additional e-mail.",
          "type": "string",
          "enum": [
            "email",
            "mail"
          ],
          "form": {
            "type": "selectWithSort",
            "options": [
              {
                "label": "email",
                "value": "email"
              },
              {
                "label": "mail",
                "value": "mail"
              }
            ]
          }
        },
        "additional_communication_email": {
          "title": "Additional communication email",
          "type": "string",
          "format": "email",
          "pattern": "^.*@.*\\..+$",
          "minLength": 6,
          "form": {
            "hideExpression": "field.parent.model && field.parent.model.communication_channel !== 'email'",
            "validation": {
              "messages": {
                "patternMessage": "The email is not valid."
              }
            }
          }
        },
        "communication_language": {
          "title": "Communication language",
          "type": "string",
          "enum": [
            "ger",
            "eng",
            "fre",
            "ita"
          ],
          "form": {
            "type": "selectWithSort",
            "options": [
              {
                "label": "lang_fre",
                "value": "fre"
              },
              {
                "label": "lang_eng",
                "value": "eng"
              },
              {
                "label": "lang_ger",
                "value": "ger"
              },
              {
                "label": "lang_ita",
                "value": "ita"
              }
            ]
          }
        },
        "subscriptions": {
          "title": "Subscriptions",
          "type": "array",
          "minItems": 1,
          "items": {
            "title": "Subscription",
            "type": "object",
            "required": [
              "start_date",
              "end_date",
              "patron_type",
              "patron_transaction"
            ],
            "properties": {
              "start_date": {
                "title": "Subscription start date",
                "description": "The subscription start date (selected date included).",
                "type": "string",
                "format": "date",
                "pattern": "\\d{4}-((0[1-9])|(1[0-2]))-(((0[1-9])|[1-2][0-9])|(3[0-1]))$"
              },
              "end_date": {
                "title": "Subscription end date",
                "description": "The subscription end date (selected date excluded).",
                "type": "string",
                "format": "date",
                "pattern": "\\d{4}-((0[1-9])|(1[0-2]))-(((0[1-9])|[1-2][0-9])|(3[0-1]))$"
              },
              "patron_type": {
                "title": "Patron type",
                "type": "object",
                "required": [
                  "$ref"
                ],
                "properties": {
                  "$ref": {
                    "type": "string",
                    "pattern": "^https://ils.rero.ch/api/patron_types/.*?$"
                  }
                }
              },
              "patron_transaction": {
                "title": "Patron transaction",
                "type": "object",
                "required": [
                  "$ref"
                ],
                "properties": {
                  "$ref": {
                    "title": "Patron transaction URI",
                    "type": "string",
                    "pattern": "^https://ils.rero.ch/api/patron_transactions/.*?$"
                  }
                }
              }
            }
          }
        },
        "blocked": {
          "title": "Blocking",
          "description": "A patron with a blocked account cannot extend, request and borrow items.",
          "type": "boolean"
        },
        "blocked_note": {
          "title": "Reason",
          "type": "string",
          "description": "The reason is displayed in the circulation module and is visible by the patron in his account.",
          "form": {
            "hideExpression": "field.parent.model &&  field.parent.model.blocked !== true",
            "expressionProperties": {
              "templateOptions.required": "true"
            }
          }
        },
        "keep_history": {
          "title": "Keep history",
          "description": "If enabled, the loan history is saved for a maximum of six months. It is visible to the user and the library staff.",
          "type": "boolean",
          "default": false
        }
      },
      "form": {
        "hideExpression": "!field.parent.model.roles.some(v => v === 'patron')",
        "templateOptions": {
          "wrappers": [
            "card"
          ]
        }
      }
    },
    "libraries": {
      "title": "libraries",
      "description": "Library affiliations for the librarian.",
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": {
        "title": "Library",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "$ref"
        ],
        "properties": {
          "$ref": {
            "title": "Library URI",
            "type": "string",
            "pattern": "^https://ils.rero.ch/api/libraries/.*?$",
            "form": {
              "fieldMap": "libraries",
              "templateOptions": {
                "label": ""
              }
            }
          }
        }
      },
      "form": {
        "hideExpression": "!field.parent.model.roles.some(v => (v === 'librarian' || v === 'system_librarian'))",
        "expressionProperties": {
          "templateOptions.required": "field.parent.model.roles.some(v => (v === 'librarian' || v === 'system_librarian'))"
        }
      }
    },
    "roles": {
      "title": "Role",
      "description": "Define the roles of the user. Please do not remove existing user role, this can have unintended side effects.",
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "maxItems": 3,
      "default": [
        "patron"
      ],
      "items": {
        "type": "string",
        "enum": [
          "patron",
          "librarian",
          "system_librarian"
        ],
        "form": {
          "type": "selectWithSort",
          "options": [
            {
              "label": "patron",
              "value": "patron"
            },
            {
              "label": "librarian",
              "value": "librarian"
            },
            {
              "label": "system_librarian",
              "value": "system_librarian"
            }
          ]
        }
      },
      "form": {
        "fieldMap": "roles",
        "templateOptions": {
          "wrappers": [
            "card"
          ]
        }
      }
    },
    "notes": {
      "title": "Notes",
      "description": "The public note is visible for the patron in his/her account.",
      "type": "array",
      "minItems": 0,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "title": "Note",
        "propertiesOrder": [
          "type",
          "content"
        ],
        "required": [
          "type",
          "content"
        ],
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "enum": [
              "public_note",
              "staff_note"
            ],
            "default": "public_note",
            "form": {
              "type": "selectWithSort",
              "options": [
                {
                  "label": "public_note",
                  "value": "public_note"
                },
                {
                  "label": "staff_note",
                  "value": "staff_note"
                }
              ]
            }
          },
          "content": {
            "type": "string",
            "title": "Content",
            "maxLength": 2000,
            "minLength": 1,
            "form": {
              "type": "textarea",
              "templateOptions": {
                "rows": 3
              }
            }
          }
        }
      },
      "form": {
        "templateOptions": {
          "wrappers": [
            "card"
          ]
        },
        "validation": {
          "validators": {
            "uniqueValueKeysInObject": {
              "keys": [
                "type"
              ]
            }
          },
          "messages": {
            "uniqueValueKeysInObjectMessage": "Only one note per type is allowed"
          }
        }
      }
    }
  }
}
