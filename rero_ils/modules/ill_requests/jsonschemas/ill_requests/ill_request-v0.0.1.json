{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "ILLRequest",
  "description": "JSON schema for ill_request.",
  "additionalProperties": false,
  "propertiesOrder": [
    "document",
    "found_in",
    "patron",
    "pickup_location",
    "status",
    "loan_status",
    "copy",
    "pages",
    "notes"
  ],
  "required": [
    "$schema",
    "pid",
    "status",
    "patron",
    "pickup_location",
    "copy",
    "document"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "title": "Schema",
      "description": "Schema to validate ILL request records against.",
      "minLength": 9,
      "default": "https://ils.rero.ch/schema/ill-requests/ill-request-v0.0.1.json"
    },
    "pid": {
      "type": "string",
      "title": "ILL request ID",
      "minLength": 1
    },
    "status": {
      "type": "string",
      "title": "Status",
      "enum": [
        "pending",
        "validated",
        "denied",
        "closed"
      ],
      "default": "pending",
      "form": {
        "options": [
          {
            "value": "pending",
            "label": "pending"
          },
          {
            "value": "validated",
            "label": "validated"
          },
          {
            "value": "denied",
            "label": "denied"
          },
          {
            "value": "closed",
            "label": "closed"
          }
        ]
      }
    },
    "copy": {
      "type": "boolean",
      "title": "Copy",
      "description": "Define if the request is for a copy or an actual document.",
      "default": false
    },
    "patron": {
      "type": "object",
      "title": "Patron",
      "required": [
        "$ref"
      ],
      "properties": {
        "$ref": {
          "type": "string",
          "title": "Patron URI",
          "pattern": "^https://ils.rero.ch/api/patrons/.*?$",
          "form": {
            "remoteTypeahead": {
              "type": "patrons"
            },
            "validation": {
              "messages": {
                "patternMessage": "Should be in the following format: https://ils.rero.ch/api/patrons/<PID>."
              }
            },
            "templateOptions": {
              "label": ""
            }
          }
        }
      }
    },
    "loan_status": {
      "type": "string",
      "title": "Loan state",
      "enum": [
        "PENDING",
        "ITEM_AT_DESK",
        "ITEM_ON_LOAN",
        "ITEM_RETURNED"
      ],
      "form": {
        "placeholder": "Choose a status",
        "options": [
          {
            "value": "PENDING",
            "label": "PENDING"
          },
          {
            "value": "ITEM_AT_DESK",
            "label": "ITEM_AT_DESK"
          },
          {
            "value": "ITEM_ON_LOAN",
            "label": "ITEM_ON_LOAN"
          },
          {
            "value": "ITEM_RETURNED",
            "label": "ITEM_RETURNED"
          }
        ]
      }
    },
    "pickup_location": {
      "type": "object",
      "title": "Pickup location",
      "required": [
        "$ref"
      ],
      "properties": {
        "$ref": {
          "type": "string",
          "title": "Pickup location URI",
          "pattern": "^https://ils.rero.ch/api/locations/.+?$",
          "form": {
            "remoteOptions": {
              "type": "locations",
              "query": "is_pickup:true",
              "labelField": "pickup_name"
            },
            "templateOptions": {
              "label": ""
            }
          }
        }
      }
    },
    "document": {
      "type": "object",
      "title": "Document information",
      "required": [
        "title"
      ],
      "propertiesOrder": [
        "title",
        "authors",
        "publisher",
        "year",
        "identifier",
        "source"
      ],
      "properties": {
        "title": {
          "type": "string",
          "title": "Title",
          "minLength": 3
        },
        "authors": {
          "type": "string",
          "title": "Authors",
          "minLength": 3
        },
        "publisher": {
          "type": "string",
          "title": "Publisher",
          "minLength": 3
        },
        "year": {
          "type": "string",
          "title": "Year",
          "pattern": "^\\d{4}$",
          "form": {
            "validation": {
              "messages": {
                "patternMessage": "Should be in the following format: YYYY (2020)."
              }
            }
          }
        },
        "identifier": {
          "type": "string",
          "title": "Identifier"
        },
        "source": {
          "type": "object",
          "title": "Source",
          "required": [
            "journal_title"
          ],
          "propertiesOrder": [
            "journal_title",
            "volume",
            "number"
          ],
          "properties": {
            "journal_title": {
              "type": "string",
              "title": "Journal title",
              "minLength": 3,
              "form": {
                "expressionProperties": {
                  "templateOptions.required": "false"
                }
              }
            },
            "volume": {
              "type": "string",
              "title": "Volume",
              "form": {
                "templateOptions": {
                  "itemCssClass": "col-md-3 p-0"
                }
              }
            },
            "number": {
              "type": "string",
              "title": "Number"
            }
          }
        }
      },
      "form": {
        "templateOptions": {
          "wrappers": [
            "card"
          ]
        }
      }
    },
    "pages": {
      "type": "string",
      "title": "Pages",
      "form": {
        "hideExpression": "model.copy === false",
        "expressionProperties": {
          "templateOptions.required": "model.copy === true"
        }
      }
    },
    "found_in": {
      "type": "object",
      "title": "Found in",
      "required": [
        "source",
        "url"
      ],
      "propertiesOrder": [
        "source",
        "url"
      ],
      "properties": {
        "source": {
          "type": "string",
          "title": "Source",
          "minLength": 3,
          "form": {
            "expressionProperties": {
              "templateOptions.required": "field.parent.model.url !== undefined && field.parent.model.url !== ''"
            }
          }
        },
        "url": {
          "type": "string",
          "title": "URL",
          "placeholder": "Example: https://www.rero.ch/",
          "format": "uri",
          "pattern": "^(ftps?|https?)://.*$",
          "minLength": 7,
          "form": {
            "expressionProperties": {
              "templateOptions.required": "field.parent.model.source !== undefined && field.parent.model.source !== ''"
            },
            "validation": {
              "messages": {
                "patternMessage": "Should be a valid URL format."
              }
            }
          }
        }
      }
    },
    "notes": {
      "type": "array",
      "title": "Notes",
      "items": {
        "type": "object",
        "title": "Note",
        "additionalProperties": false,
        "propertiesOrder": [
          "type",
          "content"
        ],
        "required": [
          "type",
          "content"
        ],
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "enum": [
              "public_note",
              "staff_note"
            ],
            "default": "public_note",
            "form": {
              "type": "selectWithSort",
              "options": [
                {
                  "label": "public_note",
                  "value": "public_note"
                },
                {
                  "label": "staff_note",
                  "value": "staff_note"
                }
              ]
            }
          },
          "content": {
            "type": "string",
            "title": "Content",
            "maxLength": 2000,
            "minLength": 3,
            "form": {
              "type": "textarea",
              "templateOptions": {
                "rows": 3
              }
            }
          }
        }
      },
      "form": {
        "templateOptions": {
          "wrappers": [
            "card"
          ]
        },
        "validation": {
          "validators": {
            "uniqueValueKeysInObject": {
              "keys": [
                "type"
              ]
            }
          },
          "messages": {
            "uniqueValueKeysInObjectMessage": "Only one note per type is allowed"
          }
        }
      }
    }
  }
}
