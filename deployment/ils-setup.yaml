# -*- coding: utf-8 -*-
apiVersion: v1
kind: Pod
metadata:
  name: ils-setup
  labels:
    app: ils
    tier: setup
spec:
  restartPolicy: Never
  volumes:
  - name: ils-app-data
    persistentVolumeClaim:
      claimName: ils-claim-data
  containers:
  - name: setup
    image: rero/rero-ils:test
    command: ["/invenio/src/scripts/setup",  "--deployment"]
    imagePullPolicy: Always
    env:
    - name: INVENIO_ACCOUNTS_SESSION_REDIS_URL
      value: redis://ils-cache:$(ILS_CACHE_SERVICE_PORT_CACHE)/1
    - name: INVENIO_BROKER_URL
      value: amqp://$(RABBITMQ_DEFAULT_USER):$(RABBITMQ_DEFAULT_PASS)@ils-mq:$(ILS_MQ_SERVICE_PORT_WORKER)//
    - name: INVENIO_CACHE_REDIS_URL
      value: redis://ils-cache:$(ILS_CACHE_SERVICE_PORT_CACHE)/0
    - name: INVENIO_CELERY_BROKER_URL
      value: amqp://$(RABBITMQ_DEFAULT_USER):$(RABBITMQ_DEFAULT_PASS)@ils-mq:$(ILS_MQ_SERVICE_PORT_WORKER)//
    - name: INVENIO_CELERY_RESULT_BACKEND
      value: redis://ils-cache:$(ILS_CACHE_SERVICE_PORT_CACHE)/2
    - name: INVENIO_SEARCH_ELASTIC_HOSTS
      value: ils-indexer:$(ILS_INDEXER_SERVICE_PORT_API)
    - name: INVENIO_SQLALCHEMY_DATABASE_URI
      value: postgresql+psycopg2://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@ils-db:$(ILS_DB_SERVICE_PORT_DB)/$(POSTGRES_DB)
    - name: INVENIO_RATELIMIT_STORAGE_URL
      value: redis://ils-cache:$(ILS_CACHE_SERVICE_PORT_CACHE)/3
    envFrom:
     - configMapRef:
         name: ils
     - secretRef:
         name: ils
    volumeMounts:
    - mountPath: /data
      name: ils-app-data
