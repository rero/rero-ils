#!/usr/bin/env bash
# -*- coding: utf-8 -*-
#
# This file is part of RERO ILS.
# Copyright (C) 2017 RERO.
#
# RERO ILS is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# RERO ILS is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with RERO ILS; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307, USA.
#
# In applying this license, RERO does not
# waive the privileges and immunities granted to it by virtue of its status
# as an Intergovernmental Organization or submit itself to any jurisdiction.

set -e

RED='\033[0;31m'
GREEN='\033[0;0;32m'
NC='\033[0m' # No Color

data_path=$(pipenv --where)/data

# Clean redis
pipenv run invenio shell --no-term-title -c "import redis; redis.StrictRedis.from_url(app.config['CACHE_REDIS_URL']).flushall(); print('Cache cleared')"
pipenv run invenio db destroy --yes-i-know
pipenv run invenio db init create
pipenv run invenio index destroy --force --yes-i-know
pipenv run invenio index init --force
pipenv run invenio index queue init purge

# Create admin role to restrict access
pipenv run invenio roles create admin
pipenv run invenio access allow superuser-access role admin

# create new user
pipenv run invenio users create -a admin@rero.ch --password administrator

# confirm users
pipenv run invenio users confirm admin@rero.ch

# create roles
pipenv run invenio roles create -d "Admins Group" admins
pipenv run invenio roles create -d "Super Users Group" superusers
pipenv run invenio roles create -d "Cataloguer" cataloguer

# create a role for users qualified as a patron
pipenv run invenio roles create -d "Patron" patrons

# create a role for users qualified as a staff member
pipenv run invenio roles create -d "Staff" staff

# grant accesses to action roles
pipenv run invenio access allow admin-access role admins
pipenv run invenio access allow superuser-access role superusers

# grant roles to users
pipenv run invenio roles add admin@rero.ch admins
pipenv run invenio roles add admin@rero.ch superusers

# create the patron records
pipenv run invenio fixtures importusers ${data_path}/users.json -v

# create the organisations with members and locations
pipenv run invenio fixtures importorganisations ${data_path}/organisations-members-locations.json -v

# API Mef configurations and harvest
pipenv run invenio apiharvester sources ${data_path}/apisources.yml
if [ "$1" = "--deployment" ]
then
    # start api harvesting asynchrone: beats must be running
    pipenv run invenio apiharvester harvest -n mef -k
else
    pipenv run invenio apiharvester harvest -n mef -m 1000
fi

# create the bib records
pipenv run dojson -i ${data_path}/10k.json reverse schema http://ils.test.rero.ch/schema/documents/document-v0.0.1.json | pipenv run invenio records create --pid-minter document_id
pipenv run invenio index reindex --yes-i-know --pid-type doc
pipenv run invenio index run -c 4

# create items
pipenv run invenio fixtures createitems -c 1000 -R

# create circulation transactions
pipenv run invenio fixtures createcirctransactions ${data_path}/circulation_transactions.json

# create patron types
pipenv run invenio fixtures importpatronstypes ${data_path}/patrons_types.json

# create item types
pipenv run invenio fixtures importitemstypes ${data_path}/items_types.json

# OAI configuration
pipenv run invenio oaiharvester initconfig ${data_path}/oaisources.yml
if [ "$1" = "--deployment" ]
then
    # start oai harvesting asynchrone: beats must be running
    pipenv run invenio oaiharvester harvest -n ebooks -q -k
else
    echo -e ${GREEN}For ebooks harvesting run:${NC} pipenv run invenio oaiharvester harvest -n ebooks -a max=100 -q
fi
