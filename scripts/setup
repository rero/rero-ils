#!/usr/bin/env bash
# -*- coding: utf-8 -*-
#
# This file is part of RERO ILS.
# Copyright (C) 2017 RERO.
#
# RERO ILS is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# RERO ILS is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with RERO ILS; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307, USA.
#
# In applying this license, RERO does not
# waive the privileges and immunities granted to it by virtue of its status
# as an Intergovernmental Organization or submit itself to any jurisdiction.


RED='\033[0;31m'
GREEN='\033[0;0;32m'
NC='\033[0m' # No Color

data_path=$(pipenv --where)/data

# Clean redis
pipenv run invenio shell --no-term-title -c "import redis; redis.StrictRedis.from_url(app.config['CACHE_REDIS_URL']).flushall(); print('Cache cleared')"
pipenv run invenio db destroy --yes-i-know
pipenv run invenio db init create
set -e
pipenv run invenio index destroy --force --yes-i-know
pipenv run invenio index init --force
pipenv run invenio index queue init purge

# Create admin role to restrict access
pipenv run invenio roles create admin
pipenv run invenio access allow superuser-access role admin

# create new user
pipenv run invenio users create -a admin@rero.ch --password administrator

# confirm users
pipenv run invenio users confirm admin@rero.ch

# create roles
pipenv run invenio roles create -d "Admins Group" admins
pipenv run invenio roles create -d "Super Users Group" superusers

# create a role for users qualified as a patron
pipenv run invenio roles create -d "Patron" patron

# create a role for users qualified as a staff library
pipenv run invenio roles create -d "Librarian" librarian

# grant accesses to action roles
pipenv run invenio access allow admin-access role admins
pipenv run invenio access allow superuser-access role superusers

# grant roles to users
pipenv run invenio roles add admin@rero.ch admins
pipenv run invenio roles add admin@rero.ch superusers

echo -e ${GREEN}Organisations:${NC}
pipenv run invenio records create --pid-minter organisation_id ${data_path}/organisations.json
pipenv run invenio index reindex -t org --yes-i-know
echo -e ${GREEN}Libraries:${NC}
pipenv run invenio records create --pid-minter library_id ${data_path}/libraries.json
pipenv run invenio index reindex -t lib --yes-i-know
echo -e ${GREEN}Locations:${NC}
pipenv run invenio records create --pid-minter location_id ${data_path}/locations.json
pipenv run invenio index reindex -t loc --yes-i-know
echo -e ${GREEN}Item types:${NC}
pipenv run invenio records create --pid-minter item_type_id ${data_path}/item_types.json
pipenv run invenio index reindex -t itty --yes-i-know
echo -e ${GREEN}Patron types:${NC}
pipenv run invenio records create --pid-minter patron_type_id ${data_path}/patron_types.json
pipenv run invenio index reindex -t ptty --yes-i-know
echo -e ${GREEN}Circulation policies:${NC}
pipenv run invenio records create --pid-minter circ_policy_id ${data_path}/circulation_policies.json
pipenv run invenio index reindex -t cipo --yes-i-know
pipenv run invenio index run --raise-on-error

pipenv run invenio fixtures import_users ${data_path}/users.json -v

# to generate data file
# pipenv run invenio fixtures create_items -c 10000 -i 5 ${data_path}/items.json
# xml to json transformation for rero marcxml records
# pipenv run dojson -i data/10k.xml -l marcxml -d pjson do marc21tojson > data/10k.json
echo -e ${GREEN}Documents:${NC}
pipenv run dojson -i ${data_path}/10k.json schema 'http://ils.rero.ch/schema/documents/document-v0.0.1.json' | pipenv run invenio records create --pid-minter document_id

# create items
# NEEDS item type !!!
# to generate data file
# pipenv run invenio fixtures create_items -c 10000 -i 5 ${data_path}/items.json
echo -e ${GREEN}Items:${NC}
if [ "$1" = "--deployment" ]
then
    pipenv run dojson -i ${data_path}/items.json schema 'http://ils.rero.ch/schema/items/item-v0.0.1.json' | pipenv run invenio records create --pid-minter item_id
else
    pipenv run dojson -i ${data_path}/items.json schema 'http://ils.rero.ch/schema/items/item-v0.0.1.json' head 2500 | pipenv run invenio records create --pid-minter item_id
fi

pipenv run invenio index reindex -t item --yes-i-know
pipenv run invenio index reindex -t doc --yes-i-know
pipenv run invenio index run -c 4 --raise-on-error

# # create circulation transactions
echo -e ${GREEN}Circulation transactions:${NC}
pipenv run invenio fixtures create_loans ${data_path}/loans.json

# # OAI configuration
pipenv run invenio oaiharvester initconfig ${data_path}/oaisources.yml
if [ "$1" = "--deployment" ]
then
    # start oai harvesting asynchrone: beats must be running
    pipenv run invenio oaiharvester harvest -n ebooks -q -k
else
    echo -e ${GREEN}For ebooks harvesting run:${NC} pipenv run invenio oaiharvester harvest -n ebooks -a max=100 -q
fi
