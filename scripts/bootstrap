#!/usr/bin/env bash
# -*- coding: utf-8 -*-
#
# RERO ILS
# Copyright (C) 2019 RERO
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

NC='\033[0m'                    # Default color
INFO_COLOR='\033[1;97;44m'      # Bold + white + blue background
SUCCESS_COLOR='\033[1;97;42m'   # Bold + white + green background
ERROR_COLOR='\033[1;97;41m'     # Bold + white + red background

PROGRAM=`basename $0`

set -e

# MESSAGES
msg() {
  echo -e "${1}" 1>&2
}
# Display a colored message
# More info: https://misc.flogisoft.com/bash/tip_colors_and_formatting
# $1: choosen color
# $2: title
# $3: the message
colored_msg() {
  msg "${1}[${2}]: ${3}${NC}"
}

info_msg() {
  colored_msg "${INFO_COLOR}" "INFO" "${1}"
}

error_msg() {
  colored_msg "${ERROR_COLOR}" "ERROR" "${1}"
}

error_msg+exit() {
    error_msg "${1}" && exit 1
}

success_msg() {
  colored_msg "${SUCCESS_COLOR}" "SUCCESS" "${1}"
}

# Displays program name
msg "PROGRAM: ${PROGRAM}"

# options may be followed by one colon to indicate they have a required argument
if ! options=$(getopt -o dct: -l deploy,ci,tgz_package: -- "$@")
then
    # something went wrong, getopt will put out an error message for us
    exit 1
fi

# The real bootstrap script starts with app installation below ;-)
flags=()
deploy=false
cmd="poetry install"
ci=false
sip2=false
tgz_file=""
while test $# -gt 0
do
  case "$1" in
    -d|--deploy)
      # We are probably inside travis, check for env variables
      deploy=true ;;
    -c|--ci)
      # We are probably inside travis, check for env variables
      ci=true ;;
    -t|--tgz_package)
      tgz_file=$2
      if [[ ! -f "${tgz_file}" ]]
      then
        error_msg+exit "package tgz file dos not exist: ${tgz_file}"
      fi
      shift ;;
    -s|--sip2)
        # install extra sip2 package
        sip2=true ;;
    (--) shift; break;;
    (-*) flags+=("$1") ;;
    (*) break;;
  esac
  shift
done

# Poetry is a mandatory condition to launch this program!
if [[ -z "${VIRTUAL_ENV}" ]]; then
  error_msg+exit "Error - Launch this script via poetry command:\n\tpoetry run ${PROGRAM}"
fi

if $deploy ; then
  if ! $ci ; then
      flags=("--no-dev")
  fi
fi

if ! $deploy ; then
    if $ci ; then
        cmd="poetry update"
    fi
fi

if $sip2  ; then
  flags+=("--extras sip2")
fi

# BOOTSTRAP START
# install the application and all the dependencies
info_msg "Install with command: ${cmd} ${flags[@]}"
${cmd} ${flags[@]}

# install the app itself
if ! $deploy ; then
    if $ci ; then
        poetry install
    fi
fi

# install assets utils
virtualenv_path=`poetry env info -p`
info_msg "Install npm assets utils in: ${virtualenv_path}"
npm install npm@latest -g --prefix "${virtualenv_path}" \
  && success_msg "Latest NPM: installed." \
  || error_msg+exit "Failed to install latest NPM."
npm install --prefix "${virtualenv_path}" --silent --force -g node-sass@4.14.1 clean-css-cli@4.3.0 uglify-js@3.9.4 requirejs@2.3.6 \
  && success_msg "NPM assets utils: installed." \
  || error_msg+exit "NPM assets utils installation failed."

# collect static files and compile html/css assets
# ------------------------------------------------
# install the npm dependencies
info_msg "Install npm dependencies"
invenio npm
info_msg "Search static folder location"
static_folder=$(poetry run invenio shell --no-term-title -c "print('static_folder:%s' % app.static_folder)"|grep static_folder| cut -d: -f2-)
info_msg "Install static folder npm dependencies in: ${static_folder}"
npm install --prefix "${static_folder}"
if [[ -f "${tgz_file}" ]]
then
  info_msg "Install RERO-ILS-UI from tgz: ${tgz_file}"
  npm install "${tgz_file}" --prefix "${static_folder}"
fi

# build the web assets
info_msg "Build web assets: collect"
invenio collect -v
info_msg "Build web assets: check (build command)"
invenio assets build

info_msg "Build web assets: using webpack for invenio-admin"
invenio webpack buildall

success_msg "${PROGRAM} finished!"
exit 0
